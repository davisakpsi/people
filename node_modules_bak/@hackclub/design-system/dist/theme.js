'use strict'

Object.defineProperty(exports, '__esModule', {
  value: true
})
exports.filterProps = exports.hexa = exports.boxShadows = exports.baseShadow = exports.shadowColor = exports.radius = exports.radii = exports.pill = exports.transition = exports.scaleFactor = exports.fontWeights = exports.bold = exports.regular = exports.fontSizes = exports.mono = exports.font = exports.space = exports.mediaQueries = exports.breakpoints = exports.cx = exports.colors = exports.brand = exports.grays = exports.palette = undefined

var _extends =
  Object.assign ||
  function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i]
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key]
        }
      }
    }
    return target
  }

var _palx = require('palx')

var _palx2 = _interopRequireDefault(_palx)

var _lodash = require('lodash')

var _styledSystem = require('styled-system')

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj }
}

var red = '#e42d42'
var blue = '#2d9ce4'
var palette = (exports.palette = (0, _palx2.default)(blue))

var grays = (exports.grays = {
  black: palette.black,
  slate: palette.gray[8],
  silver: palette.gray[7],
  smoke: palette.gray[2],
  snow: palette.gray[0],
  white: '#ffffff'
})

var brand = (exports.brand = {
  primary: red,
  accent: palette.indigo[4],
  success: palette.teal[5],
  info: palette.blue[5],
  warning: palette.orange[5],
  error: palette.red[7],
  muted: grays.silver
})

var colors = (exports.colors = _extends({}, brand, grays, palette))

var cx = (exports.cx = function cx(key) {
  return (0, _lodash.get)(colors, key, key)
})

var createMediaQuery = function createMediaQuery(n) {
  return '@media screen and (min-width:' + n + 'em)'
}

var addAliases = function addAliases(arr, aliases) {
  return aliases.forEach(function(key, i) {
    return Object.defineProperty(arr, key, {
      enumerable: false,
      get: function get() {
        return this[i]
      }
    })
  })
}

var aliases = ['sm', 'md', 'lg', 'xl']
var breakpoints = (exports.breakpoints = [32, 48, 64, 80])

var mediaQueries = (exports.mediaQueries = _extends(
  {},
  breakpoints.map(createMediaQuery),
  {
    reduceMotion: '@media (prefers-reduced-motion: reduce)',
    reduceTransparency: '@media (prefers-reduced-transparency: reduce)'
  }
))

addAliases(breakpoints, aliases)
addAliases(mediaQueries, aliases)

var space = (exports.space = [0, 4, 8, 16, 32, 64, 128, 256, 512])

var emoji = '"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol"'
var font = (exports.font =
  'Averta,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,sans-serif,' +
  emoji)
var mono = (exports.mono = 'SFMono-Regular,"Roboto Mono",Menlo,monospace')

var fontSizes = (exports.fontSizes = [12, 14, 16, 20, 24, 32, 48, 64, 72, 96])

var regular = (exports.regular = 400)
var bold = (exports.bold = 700)

// styled-system's `fontWeight` function can hook into the `fontWeights` object
var fontWeights = (exports.fontWeights = { regular: regular, bold: bold })

var scaleFactor = (exports.scaleFactor = 17 / 16)
var transition = (exports.transition = '0.125s ease-out')

// styled-systemâ€™s `borderRadius` function can hook into the `radii` object/array
var pill = (exports.pill = '9999px')
var radii = (exports.radii = ['0px', '4px', '8px', '16px', pill])
var radius = (exports.radius = '4px')

var shadowColor = (exports.shadowColor = 'rgba(0,0,0,0.16)')
var baseShadow = (exports.baseShadow = '0 0 2px 0 rgba(0,0,0,.08),')
var boxShadows = (exports.boxShadows = [
  baseShadow + ('0 2px 4px 0 ' + shadowColor),
  baseShadow + ('0 4px 8px 0 ' + shadowColor),
  baseShadow + ('0 12px 12px 0 ' + shadowColor),
  baseShadow + ('0 24px 24px 0 ' + shadowColor)
])

var hexa = (exports.hexa = function hexa(color, alpha) {
  var hex = cx(color)
  if (!(0, _lodash.includes)(hex, '#')) return shadowColor
  var r = parseInt(hex.slice(1, 3), 16),
    g = parseInt(hex.slice(3, 5), 16),
    b = parseInt(hex.slice(5, 7), 16)

  if (alpha >= 0) {
    return 'rgba(' + r + ', ' + g + ', ' + b + ', ' + alpha + ')'
  } else {
    return 'rgb(' + r + ', ' + g + ', ' + b + ')'
  }
})

var filterProps = (exports.filterProps = function filterProps(props) {
  return (0, _lodash.omit)((0, _styledSystem.removeProps)(props), [
    'theme',
    'xs',
    'sm',
    'md',
    'lg',
    'xl',
    'color',
    'bg',
    'fill',
    'fontSize',
    'f',
    'image',
    'maxWidth',
    'bold',
    'regular',
    'caps',
    'wrap',
    'size',
    'height',
    'boxShadowSize'
  ])
})

var theme = {
  breakpoints: breakpoints,
  mediaQueries: mediaQueries,
  space: space,
  mono: mono,
  font: font,
  fontSizes: fontSizes,
  fontWeights: fontWeights,
  regular: regular,
  bold: bold,
  colors: colors,
  radii: radii,
  radius: radius,
  pill: pill,
  scaleFactor: scaleFactor,
  transition: transition,
  boxShadows: boxShadows,
  shadowColor: shadowColor,
  cx: cx,
  hexa: hexa
}

exports.default = theme
