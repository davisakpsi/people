'use strict'

Object.defineProperty(exports, '__esModule', {
  value: true
})

var _extends =
  Object.assign ||
  function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i]
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key]
        }
      }
    }
    return target
  }

var _templateObject = _taggedTemplateLiteral(
  ['\n  box-shadow: none !important;\n  line-height: 0 !important;\n  ', ';\n'],
  ['\n  box-shadow: none !important;\n  line-height: 0 !important;\n  ', ';\n']
)

var _react = require('react')

var _react2 = _interopRequireDefault(_react)

var _Icon = require('./Icon')

var _Icon2 = _interopRequireDefault(_Icon)

var _Button = require('./Button')

var _Button2 = _interopRequireDefault(_Button)

var _propTypes = require('prop-types')

var _propTypes2 = _interopRequireDefault(_propTypes)

var _theme = require('./theme')

var _theme2 = _interopRequireDefault(_theme)

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : { default: obj }
}

function _objectWithoutProperties(obj, keys) {
  var target = {}
  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue
    target[i] = obj[i]
  }
  return target
}

function _taggedTemplateLiteral(strings, raw) {
  return Object.freeze(
    Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })
  )
}

var Base = _Button2.default.button.extend(_templateObject, function(props) {
  return props.circle && { padding: props.theme.space[props.p || 2] + 'px' }
})

var IconButton = function IconButton(_ref) {
  var set = _ref.set,
    name = _ref.name,
    size = _ref.size,
    color = _ref.color,
    props = _objectWithoutProperties(_ref, ['set', 'name', 'size', 'color'])

  return _react2.default.createElement(
    Base,
    _extends(
      {
        children: _react2.default.createElement(_Icon2.default, {
          set: set,
          name: name,
          size: size,
          color: color
        })
      },
      props
    )
  )
}

IconButton.displayName = 'IconButton'

IconButton.propTypes = {
  set: _propTypes2.default.oneOf(['md']),
  name: _propTypes2.default.string,
  onClick: _propTypes2.default.func,
  circle: _propTypes2.default.bool
}

IconButton.defaultProps = {
  theme: _theme2.default,
  set: 'md',
  bg: 'transparent',
  circle: false
}

exports.default = IconButton
